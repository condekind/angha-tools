"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional

"""
printing tools
"""
def adjoin(space, *lists, **kwargs):
    """
    Glues together two sets of strings using the amount of space requested.
    The idea is to prettify.

    ----------
    space : int
        number of spaces for padding
    lists : str
        list of str which being joined
    strlen : callable
        function used to calculate the length of each str. Needed for unicode
        handling.
    justfunc : callable
        function used to justify str. Needed for unicode handling.
    """
    ...

def justify(texts, max_len, mode=...):
    """
    Perform ljust, center, rjust against string or list-like
    """
    ...

def _join_unicode(lines, sep=...):
    ...

def _pprint_seq(seq, _nest_lvl=..., max_seq_items: Optional[Any] = ..., **kwds):
    """
    internal. pprinter for iterables. you should probably use pprint_thing()
    rather then calling this directly.

    bounds length of printed sequence, depending on options
    """
    ...

def _pprint_dict(seq, _nest_lvl=..., max_seq_items: Optional[Any] = ..., **kwds):
    """
    internal. pprinter for iterables. you should probably use pprint_thing()
    rather then calling this directly.
    """
    ...

def pprint_thing(thing, _nest_lvl=..., escape_chars: Optional[Any] = ..., default_escapes: bool = ..., quote_strings: bool = ..., max_seq_items: Optional[Any] = ...):
    """
    This function is the sanctioned way of converting objects
    to a unicode representation.

    properly handles nested sequences containing unicode strings
    (unicode(object) does not)

    Parameters
    ----------
    thing : anything to be formatted
    _nest_lvl : internal use only. pprint_thing() is mutually-recursive
        with pprint_sequence, this argument is used to keep track of the
        current nesting level, and limit it.
    escape_chars : list or dict, optional
        Characters to escape. If a dict is passed the values are the
        replacements
    default_escapes : bool, default False
        Whether the input escape characters replaces or adds to the defaults
    max_seq_items : False, int, default None
        Pass thru to other pretty printers to limit sequence printing

    Returns
    -------
    result - unicode object on py2, str on py3. Always Unicode.

    """
    ...

def pprint_thing_encoded(object, encoding=..., errors=..., **kwds):
    ...

def _enable_data_resource_formatter(enable):
    ...

