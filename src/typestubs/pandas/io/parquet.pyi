"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional

""" parquet compat """
def get_engine(engine):
    """ return our implementation """
    ...

class BaseImpl(object):
    api = ...
    @staticmethod
    def validate_dataframe(df):
        ...
    
    def write(self, df, path, compression, **kwargs):
        ...
    
    def read(self, path, columns: Optional[Any] = ..., **kwargs):
        ...
    


class PyArrowImpl(BaseImpl):
    def __init__(self):
        self.api = ...
    
    def write(self, df, path, compression=..., coerce_timestamps=..., **kwargs):
        ...
    
    def read(self, path, columns: Optional[Any] = ..., **kwargs):
        ...
    
    def _validate_write_lt_070(self, df):
        ...
    


class FastParquetImpl(BaseImpl):
    def __init__(self):
        self.api = ...
    
    def write(self, df, path, compression=..., **kwargs):
        ...
    
    def read(self, path, columns: Optional[Any] = ..., **kwargs):
        ...
    


def to_parquet(df, path, engine=..., compression=..., **kwargs):
    """
    Write a DataFrame to the parquet format.

    Parameters
    ----------
    df : DataFrame
    path : string
        File path
    engine : {'auto', 'pyarrow', 'fastparquet'}, default 'auto'
        Parquet reader library to use. If 'auto', then the option
        'io.parquet.engine' is used. If 'auto', then the first
        library to be installed is used.
    compression : str, optional, default 'snappy'
        compression method, includes {'gzip', 'snappy', 'brotli'}
    kwargs
        Additional keyword arguments passed to the engine
    """
    ...

def read_parquet(path, engine=..., columns: Optional[Any] = ..., **kwargs):
    """
    Load a parquet object from the file path, returning a DataFrame.

    .. versionadded 0.21.0

    Parameters
    ----------
    path : string
        File path
    columns: list, default=None
        If not None, only these columns will be read from the file.

        .. versionadded 0.21.1
    engine : {'auto', 'pyarrow', 'fastparquet'}, default 'auto'
        Parquet reader library to use. If 'auto', then the option
        'io.parquet.engine' is used. If 'auto', then the first
        library to be installed is used.
    kwargs are passed to the engine

    Returns
    -------
    DataFrame

    """
    ...

