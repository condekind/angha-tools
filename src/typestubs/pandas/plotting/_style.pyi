"""
This type stub file was generated by pyright.
"""

from contextlib import contextmanager
from typing import Any, Optional

def _get_standard_colors(num_colors: Optional[Any] = ..., colormap: Optional[Any] = ..., color_type=..., color: Optional[Any] = ...):
    ...

class _Options(dict):
    """
    Stores pandas plotting options.
    Allows for parameter aliasing so you can just use parameter names that are
    the same as the plot function parameters, but is stored in a canonical
    format that makes it easy to breakdown into groups later
    """
    _ALIASES = ...
    _DEFAULT_KEYS = ...
    def __init__(self, deprecated: bool = ...):
        ...
    
    def _warn_if_deprecated(self):
        ...
    
    def __getitem__(self, key):
        ...
    
    def __setitem__(self, key, value):
        ...
    
    def __delitem__(self, key):
        ...
    
    def __contains__(self, key):
        ...
    
    def reset(self):
        """
        Reset the option store to its initial state

        Returns
        -------
        None
        """
        ...
    
    def _get_canonical_key(self, key):
        ...
    
    @contextmanager
    def use(self, key, value):
        """
        Temporarily set a parameter value using the with statement.
        Aliasing allowed.
        """
        ...
    


plot_params = _Options()
