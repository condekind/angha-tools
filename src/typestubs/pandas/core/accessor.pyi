"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional

"""

accessor.py contains base classes for implementing accessor properties
that can be mixed into or pinned onto other pandas classes.

"""
class DirNamesMixin(object):
    _accessors = ...
    _deprecations = ...
    def _dir_deletions(self):
        """ delete unwanted __dir__ for this object """
        ...
    
    def _dir_additions(self):
        """ add addtional __dir__ for this object """
        ...
    
    def __dir__(self):
        """
        Provide method name lookup and completion
        Only provide 'public' methods
        """
        ...
    


class AccessorProperty(object):
    """Descriptor for implementing accessor properties like Series.str
    """
    def __init__(self, accessor_cls, construct_accessor: Optional[Any] = ...):
        self.accessor_cls = ...
        self.construct_accessor = ...
        self.__doc__ = ...
    
    def __get__(self, instance, owner: Optional[Any] = ...):
        ...
    
    def __set__(self, instance, value):
        ...
    
    def __delete__(self, instance):
        ...
    


class PandasDelegate(object):
    """ an abstract base class for delegating methods/properties """
    @classmethod
    def _make_accessor(cls, data):
        ...
    
    def _delegate_property_get(self, name, *args, **kwargs):
        ...
    
    def _delegate_property_set(self, name, value, *args, **kwargs):
        ...
    
    def _delegate_method(self, name, *args, **kwargs):
        ...
    
    @classmethod
    def _add_delegate_accessors(cls, delegate, accessors, typ, overwrite: bool = ...):
        """
        add accessors to cls from the delegate class

        Parameters
        ----------
        cls : the class to add the methods/properties to
        delegate : the class to get methods/properties & doc-strings
        acccessors : string list of accessors to add
        typ : 'property' or 'method'
        overwrite : boolean, default False
           overwrite the method/property in the target class if it exists
        """
        ...
    


