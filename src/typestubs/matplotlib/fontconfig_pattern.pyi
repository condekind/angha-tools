"""
This type stub file was generated by pyright.
"""

import re
from pyparsing import ParseException

"""
A module for parsing and generating fontconfig patterns.

See the `fontconfig pattern specification
<https://www.freedesktop.org/software/fontconfig/fontconfig-user.html>`_ for
more information.
"""
family_punc = r'\\\-:,'
family_unescape = re.compile(r'\\([%s])' % family_punc).sub
family_escape = re.compile(r'([%s])' % family_punc).sub
value_punc = r'\\=_:,'
value_unescape = re.compile(r'\\([%s])' % value_punc).sub
value_escape = re.compile(r'([%s])' % value_punc).sub
class FontconfigPatternParser(object):
    """A simple pyparsing-based parser for fontconfig-style patterns.

    See the `fontconfig pattern specification
    <https://www.freedesktop.org/software/fontconfig/fontconfig-user.html>`_
    for more information.
    """
    _constants = ...
    def __init__(self):
        self.ParseException = ...
    
    def parse(self, pattern):
        """
        Parse the given fontconfig *pattern* and return a dictionary
        of key/value pairs useful for initializing a
        :class:`font_manager.FontProperties` object.
        """
        ...
    
    def _family(self, s, loc, tokens):
        ...
    
    def _size(self, s, loc, tokens):
        ...
    
    def _name(self, s, loc, tokens):
        ...
    
    def _value(self, s, loc, tokens):
        ...
    
    def _families(self, s, loc, tokens):
        ...
    
    def _point_sizes(self, s, loc, tokens):
        ...
    
    def _property(self, s, loc, tokens):
        ...
    


parse_fontconfig_pattern = lru_cache()(FontconfigPatternParser().parse)
def generate_fontconfig_pattern(d):
    """
    Given a dictionary of key/value pairs, generates a fontconfig
    pattern string.
    """
    ...

