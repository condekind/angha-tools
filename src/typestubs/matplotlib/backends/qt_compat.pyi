"""
This type stub file was generated by pyright.
"""

import os
import sys

"""
Qt binding and backend selector.

The selection logic is as follows:
- if any of PyQt5, PySide2, PyQt4 or PySide have already been imported
  (checked in that order), use it;
- otherwise, if the QT_API environment variable (used by Enthought) is
  set, use it to determine which binding to use (but do not change the
  backend based on it; i.e. if the Qt4Agg backend is requested but QT_API
  is set to "pyqt5", then actually use Qt4 with the binding specified by
  ``rcParams["backend.qt4"]``;
- otherwise, use whatever the rcParams indicate.
"""
QT_API_PYQT5 = "PyQt5"
QT_API_PYSIDE2 = "PySide2"
QT_API_PYQTv2 = "PyQt4v2"
QT_API_PYSIDE = "PySide"
QT_API_PYQT = "PyQt4"
QT_API_ENV = os.environ.get("QT_API")
_ETS = { "pyqt5": QT_API_PYQT5,"pyside2": QT_API_PYSIDE2,"pyqt": QT_API_PYQTv2,"pyside": QT_API_PYSIDE,None: None }
if "PyQt5" in sys.modules:
    QT_API = QT_API_PYQT5
else:
    QT_API = QT_API_PYSIDE2
def _setup_pyqt5():
    ...

def _setup_pyqt4():
    ...

if QT_API in [QT_API_PYQT5, QT_API_PYSIDE2]:
    ...
else:
    ...
ETS = dict(pyqt=(QT_API_PYQTv2, 4), pyside=(QT_API_PYSIDE, 4), pyqt5=(QT_API_PYQT5, 5), pyside2=(QT_API_PYSIDE2, 5))
QT_RC_MAJOR_VERSION = 5 if is_pyqt5() else 4
